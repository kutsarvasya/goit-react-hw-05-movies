{"version":3,"file":"static/js/824.455e8898.chunk.js","mappings":"oKAsBA,IApBA,YAAuC,IAAjBA,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAa,WAATN,EAAoB,GAAKK,EAAME,GAAK,UAAYF,EAAME,GAC1DC,MAAO,CAAEC,KAAMP,GAFjB,SAIGG,EAAMK,SALFL,EAAME,GADA,OAaxB,C,8LClBDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,+B,aAAO,O,oBAAA,uGACkBF,EAAAA,EAAAA,GAAM,sBAAuB,CAClDG,OAAQ,CAAEC,QAASH,KAFhB,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCV,GAAnC,0FACkBI,EAAAA,EAAAA,GAAM,UAAD,OAAWJ,GAAM,CAC3CO,OAAQ,CAAEC,QAASH,KAFhB,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCX,GAAhC,0FACkBI,EAAAA,EAAAA,GAAM,UAAD,OAAWJ,EAAX,YAAyB,CACnDO,OAAQ,CAAEC,QAASH,KAFhB,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCZ,GAAhC,0FACkBI,EAAAA,EAAAA,GAAM,UAAD,OAAWJ,EAAX,YAAyB,CACnDO,OAAQ,CAAEC,QAASH,KAFhB,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,0FACkBV,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CG,OAAQ,CAAEC,QAASH,EAAKS,MAAOA,KAF5B,uBACGL,EADH,EACGA,KADH,kBAIEA,GAJF,kE,sICPP,MA1BA,YAAyC,IAAnBM,EAAkB,EAAlBA,eACpB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OACE,kBAAMC,SARa,SAAAC,GACnBA,EAAIC,iBACCJ,IACLF,EAAeE,GACfC,EAAU,IACX,EAGC,WACE,kBACEI,KAAK,OACLC,MAAa,OAANN,QAAM,IAANA,GAAAA,EAAQH,MAAQG,EAAOH,MAAQ,GACtCU,SAjBe,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAEhCL,EAD6B,KAAVK,EAAe,CAAET,MAAOS,GAAU,CAAC,EAEvD,KAgBG,4BAAQ,aAGb,E,gBCOD,MA5BA,WACE,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOtB,EAAP,KAAegC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAcC,EAAAA,EAAAA,UAClB,kCAAMH,EAAaI,IAAI,gBAAvB,QAAmC,EAAnC,GACA,CAACJ,IAeH,OAbAK,EAAAA,EAAAA,YAAU,WAAM,wCAEd,qGACqBpB,EAAAA,EAAAA,IAAkBiB,GADvC,OACQrB,EADR,OAEEiB,EAAUjB,EAAKyB,SAFjB,4CAFc,sBACTJ,GADS,mCAMdK,EACD,GAAE,CAACL,KAOF,iCACE,SAAC,EAAD,CAAYf,eANO,SAAAN,GACrBoB,EAAgBpB,EACjB,IAKIf,IAAU,SAAC0C,EAAA,EAAD,CAAY3C,KAAM,SAAUC,OAAQA,MAGpD,C","sources":["components/MoviesList/MoviesList.jsx","components/SearchMoviesApi.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nfunction MoviesList({ page, movies }) {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              to={page === 'movies' ? '' + movie.id : 'movies/' + movie.id}\n              state={{ from: location }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default MoviesList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'dace3ba60ee82f0a15c6bb8af3a62e30';\n\nexport async function searchMovies() {\n  const { data } = await axios('/trending/movie/day', {\n    params: { api_key: KEY },\n  });\n  return data;\n}\n\n//\nexport async function searchMoviesDetails(id) {\n  const { data } = await axios(`/movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return data;\n}\n\nexport async function getMoviesCredits(id) {\n  const { data } = await axios(`/movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return data;\n}\n\nexport async function getMoviesReviews(id) {\n  const { data } = await axios(`/movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return data;\n}\n\nexport async function getMoviesBySearch(query) {\n  const { data } = await axios(`/search/movie`, {\n    params: { api_key: KEY, query: query },\n  });\n  return data;\n}\n","import { useState } from 'react';\n\nfunction SearchForm({ resultBySearch }) {\n  const [search, setSearch] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearch(nextParams);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (!search) return;\n    resultBySearch(search);\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={search?.query ? search.query : ''}\n        onChange={handleChange}\n      />\n      <button>search</button>\n    </form>\n  );\n}\nexport default SearchForm;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { getMoviesBySearch } from 'components/SearchMoviesApi';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction MoviesPage() {\n  const [movies, setMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const querySearch = useMemo(\n    () => searchParams.get('query') ?? '',\n    [searchParams]\n  );\n  useEffect(() => {\n    if (!querySearch) return;\n    async function getMovies() {\n      const data = await getMoviesBySearch(querySearch);\n      setMovies(data.results);\n    }\n    getMovies();\n  }, [querySearch]);\n\n  const resultBySearch = data => {\n    setSearchParams(data);\n  };\n\n  return (\n    <>\n      <SearchForm resultBySearch={resultBySearch} />\n      {movies && <MoviesList page={'movies'} movies={movies} />}\n    </>\n  );\n}\nexport default MoviesPage;\n"],"names":["page","movies","location","useLocation","map","movie","to","id","state","from","title","axios","KEY","searchMovies","params","api_key","data","searchMoviesDetails","getMoviesCredits","getMoviesReviews","getMoviesBySearch","query","resultBySearch","useState","search","setSearch","onSubmit","evt","preventDefault","type","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","querySearch","useMemo","get","useEffect","results","getMovies","MoviesList"],"sourceRoot":""}